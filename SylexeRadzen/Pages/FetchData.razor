@page "/fetchdata"
@inject IWebHostEnvironment Environment
@inject IJSRuntime JS
@using SylexeRadzen.SQLManagement.Services;
@inject ISylexeReportsServices _sylexeService
@using System.Text.Json;
@using Components
@inject DialogService DialogService

<RadzenCard>

<RadzenDataList AllowVirtualization=@true Style="@(allowVirtualization ? "height:auto;overflow:auto;" : "")" 
                    WrapItems="@(!allowVirtualization)" AllowPaging="@(!allowVirtualization)"
                    Data="@bouhbouh" TItem="Vulnerabilities" PageSize="6" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="false">
        <Template Context="product">
            <RadzenCard Style="width: 100%; padding: 0;">
                <RadzenRow Gap="0">
                    <RadzenColumn Size="12" SizeLG="2" Class="rz-p-4 product-title">
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" class="rz-color-secondary">@(product.VulnerabilityID)</RadzenText>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeLG="7" Class="rz-p-4">
                        <RadzenRow Gap="0">
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Pkg Name</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(product.PkgName)</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="2">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Score</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(product.CVSS.nvd.V3Score)</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="5">
                                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H5" Class="rz-mb-0">Description</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body2">@(product.Description[..50])</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="6" SizeLG="3" Class="rz-text-align-start rz-text-align-lg-end">
                                @if (product.Severity == "CRITICAL")
                                {
                                    <RadzenBadge BadgeStyle="BadgeStyle.Danger" Shade="Shade.Lighter" class="price-badge" Text="CRITIQUE"/>
                                } else if (product.Severity == "HIGH")
                                {
                                    <RadzenBadge BadgeStyle="BadgeStyle.Warning" Shade="Shade.Lighter" class="price-badge" Text="HAUTE"/>
                                } else if (product.Severity == "MEDIUM")
                                {
                                    <RadzenBadge BadgeStyle="BadgeStyle.Info" Shade="Shade.Lighter" class="price-badge" Text="MOYENNE"/>
                                } else if (product.Severity == "LOW")
                                {
                                    <RadzenBadge BadgeStyle="BadgeStyle.Success" Shade="Shade.Lighter" class="price-badge" Text="FAIBLE"/>
                                }
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeLG="1" Class="rz-p-4">
                        <RadzenButton Click=@(args => ShowInlineDialog(@product.Description)) Icon="add_circle_outline" ButtonStyle="ButtonStyle.Primary" />
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
        </Template>
    </RadzenDataList>
</RadzenCard>

@if (@metadata == null)
{
    <p>Chargement...</p>
}
else
{
    <RadzenCard>
        <RadzenButton Text="Exporter les données" Click="@DownloadJsonFile" />
    </RadzenCard>
}

<style>
.product-title {
    min-height: 72px;
    background-color: var(--rz-secondary-lighter);
}
.price-badge {
    font-size: 16px;
    font-weight: bold;
    line-height: 20px;
    padding: 8px;
}
</style>

@code {

    List<Vulnerabilities> filteredBouhbouh;
    List<Vulnerabilities> bouhbouh;
    bool allowVirtualization = true;
    
    IEnumerable<int> selectedIds;
    IEnumerable<int> orderIds;

    private async Task DownloadJsonFile()
    {
        var fileName = _sylexeService.GetPathOfJson();
        var path = Path.Combine(Environment.ContentRootPath, Environment.EnvironmentName, fileName);

        await using FileStream fs = new(path, FileMode.Open);

        using var streamRef = new DotNetStreamReference(stream: fs);

        await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
    }
    
    async Task ShowInlineDialog(String descVuln)
    {
        var result = await DialogService.OpenSideAsync<DialogSide>("Détails", new Dictionary<string, object>() {{"Desc", descVuln}}, options: new SideDialogOptions
        {
            Position = DialogPosition.Right
        });
    }
    

    private MetadataJson metadata = null;

    protected override async Task OnInitializedAsync()
    {
        var fileName = _sylexeService.GetPathOfJson();
            <!--var fileName = "aquasec-trivy_0.34.0-10-juillet-2023-11_20_09.json";-->
        var path = Path.Combine(Environment.ContentRootPath, Environment.EnvironmentName, fileName);

        await using FileStream fs = new(path, FileMode.Open);

        StreamReader reader = new StreamReader(fs);
        string fileContent = await reader.ReadToEndAsync();
        metadata = JsonSerializer.Deserialize<MetadataJson>(fileContent, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        bouhbouh = metadata.Results[0].Vulnerabilities;
    }

    public class MetadataJson
    {
        public int SchemaVersion { get; set; }
        public string ArtifactName { get; set; }
        public string ArtifactType { get; set; }
        public Metadata Metadata { get; set; }
        public List<Results> Results { get; set; }

    }

    public class Metadata
    {
        public OS OS { get; set; }
        public string ImageID { get; set; }
        public string[] DiffIDs { get; set; }
        public string[] RepoTags { get; set; }
        public string[] RepoDigests { get; set; }
        public ImageConfig ImageConfig { get; set; }
    }

    public class OS
    {
        public string Family { get; set; }
        public string Name { get; set; }
    }

    public class ImageConfig
    {
        public string architecture { get; set; }
        public string created { get; set; }
        public History[] history { get; set; }
        public string os { get; set; }
        public Rootfs rootfs { get; set; }
        public Config config { get; set; }
    }

    public class History
    {
        public string created { get; set; }
        public string created_by { get; set; }
        public bool empty_layer { get; set; }
        public string comment { get; set; }
    }

    public class Rootfs
    {
        public string type { get; set; }
        public string[] diff_ids { get; set; }
    }

    public class Config
    {
        public string[] Entrypoint { get; set; }
        public string[] Env { get; set; }
        public Labels Labels { get; set; }
    }

    public class Labels
    {
        public string org_opencontainers_image_created { get; set; }
        public string org_opencontainers_image_description { get; set; }
        public string org_opencontainers_image_documentation { get; set; }
        public string org_opencontainers_image_revision { get; set; }
        public string org_opencontainers_image_source { get; set; }
        public string org_opencontainers_image_title { get; set; }
        public string org_opencontainers_image_url { get; set; }
    }

    public class Results
    {
        public String Target { get; set; }
        public String Class { get; set; }
        public String Type { get; set; }
        public List<Vulnerabilities> Vulnerabilities { get; set; }
    }

    public class Vulnerabilities
    {
        public String VulnerabilityID { get; set; }
        public String PkgName { get; set; }
        public String InstalledVersion { get; set; }
        public Layer Layer { get; set; }
        public String SeveritySource { get; set; }
        public String PrimaryURL { get; set; }
        public DataSource DataSource { get; set; }
        public String Title { get; set; }
        public String Description { get; set; }
        public String Severity { get; set; }
        public String[] CweIDs { get; set; }
        public CVSS CVSS { get; set; }
        public String[] References { get; set; }
        public String PublishedDate { get; set; }
        public String LastModifiedDate { get; set; }
    }

    public class Layer
    {
        public String Digest { get; set; }
        public String DiffID { get; set; }
    }

    public class DataSource
    {
        public String ID { get; set; }
        public String Name { get; set; }
        public String URL { get; set; }
    }

    public class CVSS
    {
        public nvd nvd { get; set; }
        public redhat redhat { get; set; }
    }

    public class nvd
    {
        public String V2Vector { get; set; }
        public String V3Vector { get; set; }
        public float V2Score { get; set; }
        public float V3Score { get; set; }
    }

    public class redhat
    {
        public String V3Vector { get; set; }
        public float V3Score { get; set; }
    }

}