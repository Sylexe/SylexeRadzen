@page "/history"
@using System 
@using System.IO
@using System.Diagnostics
@using System.ComponentModel
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@using SylexeRadzen.SQLManagement.Definitions
@using SylexeRadzen.SQLManagement.Context;
@using SylexeRadzen.SQLManagement.Services;
@inject ILogger<History> Logger
@inject IWebHostEnvironment WebEnvironment
@inject ISylexeReportsServices _sylexeService
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager

<PageTitle>History</PageTitle>

<RadzenCard class="p-0">
    <RadzenStack Orientation="@orientation" Gap="@gap" Reverse="@reverse" JustifyContent="@justifyContent" AlignItems="@alignItems" Style="height: 350px">
        
        @foreach (var report  in reports)
        {
            <RadzenRow  Style="background-color:#D7DBE0;padding: 10px;border-radius: 10px;">
                <RadzenColumn Style="">
                    <RadzenCard style="height: 80px; width: 200px;background-color:#577296;color:white;text-align:center;vertical-align:center;font-size: 25px">
                        @report.Name
                    </RadzenCard>
                </RadzenColumn>
                <RadzenColumn Style="">
                    <RadzenCard style="height: 80px; width: 400px; background-color:#D7DBE0; color: white; text-align: center;vertical-align: center;font-size: 25px">
                        @report.Timestamp
                    </RadzenCard>
                </RadzenColumn>
                <RadzenColumn>
                    <RadzenButton Click=@(args => OnClick(@report)) Text="+" ButtonStyle="ButtonStyle.Primary" Style="background-color:#375A8B;margin-top: 20px;font-size: 20px"/>
                </RadzenColumn>
            </RadzenRow>
        }
    </RadzenStack>
</RadzenCard>



@code {
    Orientation orientation = Orientation.Vertical;
    AlignItems alignItems = AlignItems.Center;
    JustifyContent justifyContent = JustifyContent.Center;
    FlexWrap wrap = FlexWrap.NoWrap;
    string gap = "10px";
    bool reverse;
    List<SylexeReports> reports;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        reports = await _sylexeService.GetCategoriesAsync();
    }
    private void OnClick(SylexeReports report)
    {
        _sylexeService.SetPathOfJson(report.Path);
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "Button Clicked"});
        NavigationManager.NavigateTo("/FetchData");
    }
}
